{"remainingRequest":"/Users/akuznetsov/Web/mediumclone_vue/node_modules/babel-loader/lib/index.js!/Users/akuznetsov/Web/mediumclone_vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/akuznetsov/Web/mediumclone_vue/src/api/axios.js","dependencies":[{"path":"/Users/akuznetsov/Web/mediumclone_vue/src/api/axios.js","mtime":1622581122000},{"path":"/Users/akuznetsov/Web/mediumclone_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akuznetsov/Web/mediumclone_vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/akuznetsov/Web/mediumclone_vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgZ2V0SXRlbSB9IGZyb20gJ0AvaGVscGVycy9wZXJzaXN0YW5jZVN0b3JhZ2UnOwpheGlvcy5kZWZhdWx0cy5iYXNlVVJMID0gJ2h0dHBzOi8vY29uZHVpdC5wcm9kdWN0aW9ucmVhZHkuaW8vYXBpJzsKYXhpb3MuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICB2YXIgdG9rZW4gPSBnZXRJdGVtKCdhY2Nlc3NUb2tlbicpOwogIHZhciBhdXRoVG9rZW4gPSB0b2tlbiA/ICJUb2tlbiAiLmNvbmNhdCh0b2tlbikgOiAnJzsKICBjb25zb2xlLmxvZygnYXV0aCB0b2tlbjonLCBhdXRoVG9rZW4pOwogIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSBhdXRoVG9rZW47CiAgcmV0dXJuIGNvbmZpZzsKfSk7CmV4cG9ydCBkZWZhdWx0IGF4aW9zOw=="},{"version":3,"sources":["/Users/akuznetsov/Web/mediumclone_vue/src/api/axios.js"],"names":["axios","getItem","defaults","baseURL","interceptors","request","use","config","token","authToken","console","log","headers","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,8BAAxB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,wCAAzB;AAEAH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAACC,MAAD,EAAY;AAC1C,MAAMC,KAAK,GAAGP,OAAO,CAAC,aAAD,CAArB;AACA,MAAMQ,SAAS,GAAGD,KAAK,mBAAYA,KAAZ,IAAsB,EAA7C;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,SAA3B;AACAF,EAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAA+BJ,SAA/B;AACA,SAAOF,MAAP;AACA,CAND;AAQA,eAAeP,KAAf","sourcesContent":["import axios from 'axios';\n\nimport { getItem } from '@/helpers/persistanceStorage';\n\naxios.defaults.baseURL = 'https://conduit.productionready.io/api';\n\naxios.interceptors.request.use((config) => {\n\tconst token = getItem('accessToken');\n\tconst authToken = token ? `Token ${token}` : '';\n\tconsole.log('auth token:', authToken);\n\tconfig.headers.Authorization = authToken;\n\treturn config;\n});\n\nexport default axios;\n"]}]}